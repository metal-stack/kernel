name: master

on:
  push:
    branches:
      - master

jobs:

  build:
 
    runs-on: ubuntu-20.04
 
    strategy:
      matrix:
        kernel: ["5.10.84"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          docker build --build-arg KERNEL_MAJOR="v5.x" \
                      --build-arg KERNEL_VERSION=${{ matrix.kernel }} \
                      --build-arg KERNEL_SERIES="mainline" \
                      --tag metal-stack/kernel .
          docker export $(docker create metal-stack/kernel /dev/null) > kernel.tar
          tar -xf kernel.tar metal-kernel
          cp metal-kernel metal-kernel-${{ matrix.kernel }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.kernel }}-${{ github.run_number }}
          release_name: Kernel ${{ matrix.kernel }}-${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./metal-kernel-${{ matrix.kernel }}
          asset_name: metal-kernel
          asset_content_type: application/bzip
